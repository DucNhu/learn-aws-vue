
type BlogModel @aws_api_key @aws_iam {
  id: ID!
  title: String
  share: String
  status: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type CommentModel @aws_api_key @aws_iam {
  id: ID!
  content: String
  like: Int
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type ReplyCommentModel @aws_api_key @aws_iam {
  id: ID!
  content: String
  like: Int
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type LikeModel @aws_api_key @aws_iam {
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type TagModel @aws_api_key @aws_iam {
  id: ID!
  name: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type PhotoModel @aws_api_key @aws_iam {
  id: ID!
  name: String
  desciption: String
  tagId: String
  view: Int
  status: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type UntitledModel @aws_api_key @aws_iam {
  id: ID!
  name: String
  description: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type UntitledFkModel @aws_api_key @aws_iam {
  id: ID!
  content: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelBlogModelConnection @aws_api_key @aws_iam {
  items: [BlogModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelBlogModelFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  share: ModelStringInput
  status: ModelBooleanInput
  and: [ModelBlogModelFilterInput]
  or: [ModelBlogModelFilterInput]
  not: ModelBlogModelFilterInput
}

type Query {
  getBlogModel(id: ID!): BlogModel @aws_api_key @aws_iam
  listBlogModels(filter: ModelBlogModelFilterInput, limit: Int, nextToken: String): ModelBlogModelConnection @aws_api_key @aws_iam
  syncBlogModels(filter: ModelBlogModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelBlogModelConnection @aws_api_key @aws_iam
  getCommentModel(id: ID!): CommentModel @aws_api_key @aws_iam
  listCommentModels(filter: ModelCommentModelFilterInput, limit: Int, nextToken: String): ModelCommentModelConnection @aws_api_key @aws_iam
  syncCommentModels(filter: ModelCommentModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCommentModelConnection @aws_api_key @aws_iam
  getReplyCommentModel(id: ID!): ReplyCommentModel @aws_api_key @aws_iam
  listReplyCommentModels(filter: ModelReplyCommentModelFilterInput, limit: Int, nextToken: String): ModelReplyCommentModelConnection @aws_api_key @aws_iam
  syncReplyCommentModels(filter: ModelReplyCommentModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelReplyCommentModelConnection @aws_api_key @aws_iam
  getLikeModel(id: ID!): LikeModel @aws_api_key @aws_iam
  listLikeModels(filter: ModelLikeModelFilterInput, limit: Int, nextToken: String): ModelLikeModelConnection @aws_api_key @aws_iam
  syncLikeModels(filter: ModelLikeModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLikeModelConnection @aws_api_key @aws_iam
  getTagModel(id: ID!): TagModel @aws_api_key @aws_iam
  listTagModels(filter: ModelTagModelFilterInput, limit: Int, nextToken: String): ModelTagModelConnection @aws_api_key @aws_iam
  syncTagModels(filter: ModelTagModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTagModelConnection @aws_api_key @aws_iam
  getPhotoModel(id: ID!): PhotoModel @aws_api_key @aws_iam
  listPhotoModels(filter: ModelPhotoModelFilterInput, limit: Int, nextToken: String): ModelPhotoModelConnection @aws_api_key @aws_iam
  syncPhotoModels(filter: ModelPhotoModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelPhotoModelConnection @aws_api_key @aws_iam
  getUntitledModel(id: ID!): UntitledModel @aws_api_key @aws_iam
  listUntitledModels(filter: ModelUntitledModelFilterInput, limit: Int, nextToken: String): ModelUntitledModelConnection @aws_api_key @aws_iam
  syncUntitledModels(filter: ModelUntitledModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUntitledModelConnection @aws_api_key @aws_iam
  getUntitledFkModel(id: ID!): UntitledFkModel @aws_api_key @aws_iam
  listUntitledFkModels(filter: ModelUntitledFkModelFilterInput, limit: Int, nextToken: String): ModelUntitledFkModelConnection @aws_api_key @aws_iam
  syncUntitledFkModels(filter: ModelUntitledFkModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUntitledFkModelConnection @aws_api_key @aws_iam
}

input ModelBlogModelConditionInput {
  title: ModelStringInput
  share: ModelStringInput
  status: ModelBooleanInput
  and: [ModelBlogModelConditionInput]
  or: [ModelBlogModelConditionInput]
  not: ModelBlogModelConditionInput
}

input CreateBlogModelInput {
  id: ID
  title: String
  share: String
  status: Boolean
  _version: Int
}

input UpdateBlogModelInput {
  id: ID!
  title: String
  share: String
  status: Boolean
  _version: Int
}

input DeleteBlogModelInput {
  id: ID!
  _version: Int
}

type Mutation {
  createBlogModel(input: CreateBlogModelInput!, condition: ModelBlogModelConditionInput): BlogModel @aws_api_key @aws_iam
  updateBlogModel(input: UpdateBlogModelInput!, condition: ModelBlogModelConditionInput): BlogModel @aws_api_key @aws_iam
  deleteBlogModel(input: DeleteBlogModelInput!, condition: ModelBlogModelConditionInput): BlogModel @aws_api_key @aws_iam
  createCommentModel(input: CreateCommentModelInput!, condition: ModelCommentModelConditionInput): CommentModel @aws_api_key @aws_iam
  updateCommentModel(input: UpdateCommentModelInput!, condition: ModelCommentModelConditionInput): CommentModel @aws_api_key @aws_iam
  deleteCommentModel(input: DeleteCommentModelInput!, condition: ModelCommentModelConditionInput): CommentModel @aws_api_key @aws_iam
  createReplyCommentModel(input: CreateReplyCommentModelInput!, condition: ModelReplyCommentModelConditionInput): ReplyCommentModel @aws_api_key @aws_iam
  updateReplyCommentModel(input: UpdateReplyCommentModelInput!, condition: ModelReplyCommentModelConditionInput): ReplyCommentModel @aws_api_key @aws_iam
  deleteReplyCommentModel(input: DeleteReplyCommentModelInput!, condition: ModelReplyCommentModelConditionInput): ReplyCommentModel @aws_api_key @aws_iam
  createLikeModel(input: CreateLikeModelInput!, condition: ModelLikeModelConditionInput): LikeModel @aws_api_key @aws_iam
  updateLikeModel(input: UpdateLikeModelInput!, condition: ModelLikeModelConditionInput): LikeModel @aws_api_key @aws_iam
  deleteLikeModel(input: DeleteLikeModelInput!, condition: ModelLikeModelConditionInput): LikeModel @aws_api_key @aws_iam
  createTagModel(input: CreateTagModelInput!, condition: ModelTagModelConditionInput): TagModel @aws_api_key @aws_iam
  updateTagModel(input: UpdateTagModelInput!, condition: ModelTagModelConditionInput): TagModel @aws_api_key @aws_iam
  deleteTagModel(input: DeleteTagModelInput!, condition: ModelTagModelConditionInput): TagModel @aws_api_key @aws_iam
  createPhotoModel(input: CreatePhotoModelInput!, condition: ModelPhotoModelConditionInput): PhotoModel @aws_api_key @aws_iam
  updatePhotoModel(input: UpdatePhotoModelInput!, condition: ModelPhotoModelConditionInput): PhotoModel @aws_api_key @aws_iam
  deletePhotoModel(input: DeletePhotoModelInput!, condition: ModelPhotoModelConditionInput): PhotoModel @aws_api_key @aws_iam
  createUntitledModel(input: CreateUntitledModelInput!, condition: ModelUntitledModelConditionInput): UntitledModel @aws_api_key @aws_iam
  updateUntitledModel(input: UpdateUntitledModelInput!, condition: ModelUntitledModelConditionInput): UntitledModel @aws_api_key @aws_iam
  deleteUntitledModel(input: DeleteUntitledModelInput!, condition: ModelUntitledModelConditionInput): UntitledModel @aws_api_key @aws_iam
  createUntitledFkModel(input: CreateUntitledFkModelInput!, condition: ModelUntitledFkModelConditionInput): UntitledFkModel @aws_api_key @aws_iam
  updateUntitledFkModel(input: UpdateUntitledFkModelInput!, condition: ModelUntitledFkModelConditionInput): UntitledFkModel @aws_api_key @aws_iam
  deleteUntitledFkModel(input: DeleteUntitledFkModelInput!, condition: ModelUntitledFkModelConditionInput): UntitledFkModel @aws_api_key @aws_iam
}

type Subscription {
  onCreateBlogModel: BlogModel @aws_subscribe(mutations: ["createBlogModel"]) @aws_api_key @aws_iam
  onUpdateBlogModel: BlogModel @aws_subscribe(mutations: ["updateBlogModel"]) @aws_api_key @aws_iam
  onDeleteBlogModel: BlogModel @aws_subscribe(mutations: ["deleteBlogModel"]) @aws_api_key @aws_iam
  onCreateCommentModel: CommentModel @aws_subscribe(mutations: ["createCommentModel"]) @aws_api_key @aws_iam
  onUpdateCommentModel: CommentModel @aws_subscribe(mutations: ["updateCommentModel"]) @aws_api_key @aws_iam
  onDeleteCommentModel: CommentModel @aws_subscribe(mutations: ["deleteCommentModel"]) @aws_api_key @aws_iam
  onCreateReplyCommentModel: ReplyCommentModel @aws_subscribe(mutations: ["createReplyCommentModel"]) @aws_api_key @aws_iam
  onUpdateReplyCommentModel: ReplyCommentModel @aws_subscribe(mutations: ["updateReplyCommentModel"]) @aws_api_key @aws_iam
  onDeleteReplyCommentModel: ReplyCommentModel @aws_subscribe(mutations: ["deleteReplyCommentModel"]) @aws_api_key @aws_iam
  onCreateLikeModel: LikeModel @aws_subscribe(mutations: ["createLikeModel"]) @aws_api_key @aws_iam
  onUpdateLikeModel: LikeModel @aws_subscribe(mutations: ["updateLikeModel"]) @aws_api_key @aws_iam
  onDeleteLikeModel: LikeModel @aws_subscribe(mutations: ["deleteLikeModel"]) @aws_api_key @aws_iam
  onCreateTagModel: TagModel @aws_subscribe(mutations: ["createTagModel"]) @aws_api_key @aws_iam
  onUpdateTagModel: TagModel @aws_subscribe(mutations: ["updateTagModel"]) @aws_api_key @aws_iam
  onDeleteTagModel: TagModel @aws_subscribe(mutations: ["deleteTagModel"]) @aws_api_key @aws_iam
  onCreatePhotoModel: PhotoModel @aws_subscribe(mutations: ["createPhotoModel"]) @aws_api_key @aws_iam
  onUpdatePhotoModel: PhotoModel @aws_subscribe(mutations: ["updatePhotoModel"]) @aws_api_key @aws_iam
  onDeletePhotoModel: PhotoModel @aws_subscribe(mutations: ["deletePhotoModel"]) @aws_api_key @aws_iam
  onCreateUntitledModel: UntitledModel @aws_subscribe(mutations: ["createUntitledModel"]) @aws_api_key @aws_iam
  onUpdateUntitledModel: UntitledModel @aws_subscribe(mutations: ["updateUntitledModel"]) @aws_api_key @aws_iam
  onDeleteUntitledModel: UntitledModel @aws_subscribe(mutations: ["deleteUntitledModel"]) @aws_api_key @aws_iam
  onCreateUntitledFkModel: UntitledFkModel @aws_subscribe(mutations: ["createUntitledFkModel"]) @aws_api_key @aws_iam
  onUpdateUntitledFkModel: UntitledFkModel @aws_subscribe(mutations: ["updateUntitledFkModel"]) @aws_api_key @aws_iam
  onDeleteUntitledFkModel: UntitledFkModel @aws_subscribe(mutations: ["deleteUntitledFkModel"]) @aws_api_key @aws_iam
}

type ModelCommentModelConnection @aws_api_key @aws_iam {
  items: [CommentModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCommentModelFilterInput {
  id: ModelIDInput
  content: ModelStringInput
  like: ModelIntInput
  and: [ModelCommentModelFilterInput]
  or: [ModelCommentModelFilterInput]
  not: ModelCommentModelFilterInput
}

input ModelCommentModelConditionInput {
  content: ModelStringInput
  like: ModelIntInput
  and: [ModelCommentModelConditionInput]
  or: [ModelCommentModelConditionInput]
  not: ModelCommentModelConditionInput
}

input CreateCommentModelInput {
  id: ID
  content: String
  like: Int
  _version: Int
}

input UpdateCommentModelInput {
  id: ID!
  content: String
  like: Int
  _version: Int
}

input DeleteCommentModelInput {
  id: ID!
  _version: Int
}

type ModelReplyCommentModelConnection @aws_api_key @aws_iam {
  items: [ReplyCommentModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelReplyCommentModelFilterInput {
  id: ModelIDInput
  content: ModelStringInput
  like: ModelIntInput
  and: [ModelReplyCommentModelFilterInput]
  or: [ModelReplyCommentModelFilterInput]
  not: ModelReplyCommentModelFilterInput
}

input ModelReplyCommentModelConditionInput {
  content: ModelStringInput
  like: ModelIntInput
  and: [ModelReplyCommentModelConditionInput]
  or: [ModelReplyCommentModelConditionInput]
  not: ModelReplyCommentModelConditionInput
}

input CreateReplyCommentModelInput {
  id: ID
  content: String
  like: Int
  _version: Int
}

input UpdateReplyCommentModelInput {
  id: ID!
  content: String
  like: Int
  _version: Int
}

input DeleteReplyCommentModelInput {
  id: ID!
  _version: Int
}

type ModelLikeModelConnection @aws_api_key @aws_iam {
  items: [LikeModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLikeModelFilterInput {
  id: ModelIDInput
  and: [ModelLikeModelFilterInput]
  or: [ModelLikeModelFilterInput]
  not: ModelLikeModelFilterInput
}

input ModelLikeModelConditionInput {
  and: [ModelLikeModelConditionInput]
  or: [ModelLikeModelConditionInput]
  not: ModelLikeModelConditionInput
}

input CreateLikeModelInput {
  id: ID
  _version: Int
}

input UpdateLikeModelInput {
  id: ID!
  _version: Int
}

input DeleteLikeModelInput {
  id: ID!
  _version: Int
}

type ModelTagModelConnection @aws_api_key @aws_iam {
  items: [TagModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTagModelFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  and: [ModelTagModelFilterInput]
  or: [ModelTagModelFilterInput]
  not: ModelTagModelFilterInput
}

input ModelTagModelConditionInput {
  name: ModelStringInput
  and: [ModelTagModelConditionInput]
  or: [ModelTagModelConditionInput]
  not: ModelTagModelConditionInput
}

input CreateTagModelInput {
  id: ID
  name: String
  _version: Int
}

input UpdateTagModelInput {
  id: ID!
  name: String
  _version: Int
}

input DeleteTagModelInput {
  id: ID!
  _version: Int
}

type ModelPhotoModelConnection @aws_api_key @aws_iam {
  items: [PhotoModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelPhotoModelFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  desciption: ModelStringInput
  tagId: ModelStringInput
  view: ModelIntInput
  status: ModelBooleanInput
  and: [ModelPhotoModelFilterInput]
  or: [ModelPhotoModelFilterInput]
  not: ModelPhotoModelFilterInput
}

input ModelPhotoModelConditionInput {
  name: ModelStringInput
  desciption: ModelStringInput
  tagId: ModelStringInput
  view: ModelIntInput
  status: ModelBooleanInput
  and: [ModelPhotoModelConditionInput]
  or: [ModelPhotoModelConditionInput]
  not: ModelPhotoModelConditionInput
}

input CreatePhotoModelInput {
  id: ID
  name: String
  desciption: String
  tagId: String
  view: Int
  status: Boolean
  _version: Int
}

input UpdatePhotoModelInput {
  id: ID!
  name: String
  desciption: String
  tagId: String
  view: Int
  status: Boolean
  _version: Int
}

input DeletePhotoModelInput {
  id: ID!
  _version: Int
}

type ModelUntitledModelConnection @aws_api_key @aws_iam {
  items: [UntitledModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUntitledModelFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelUntitledModelFilterInput]
  or: [ModelUntitledModelFilterInput]
  not: ModelUntitledModelFilterInput
}

input ModelUntitledModelConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelUntitledModelConditionInput]
  or: [ModelUntitledModelConditionInput]
  not: ModelUntitledModelConditionInput
}

input CreateUntitledModelInput {
  id: ID
  name: String
  description: String
  _version: Int
}

input UpdateUntitledModelInput {
  id: ID!
  name: String
  description: String
  _version: Int
}

input DeleteUntitledModelInput {
  id: ID!
  _version: Int
}

type ModelUntitledFkModelConnection @aws_api_key @aws_iam {
  items: [UntitledFkModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUntitledFkModelFilterInput {
  id: ModelIDInput
  content: ModelStringInput
  and: [ModelUntitledFkModelFilterInput]
  or: [ModelUntitledFkModelFilterInput]
  not: ModelUntitledFkModelFilterInput
}

input ModelUntitledFkModelConditionInput {
  content: ModelStringInput
  and: [ModelUntitledFkModelConditionInput]
  or: [ModelUntitledFkModelConditionInput]
  not: ModelUntitledFkModelConditionInput
}

input CreateUntitledFkModelInput {
  id: ID
  content: String!
  _version: Int
}

input UpdateUntitledFkModelInput {
  id: ID!
  content: String
  _version: Int
}

input DeleteUntitledFkModelInput {
  id: ID!
  _version: Int
}

